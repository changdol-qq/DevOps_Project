terraform {
    backend "s3" {
      bucket = "mark-cicd-terraform-eks" 
      key    = "jenkins/terraform.tfstate"
      region = "ap-northeast-2"
    }
  }



  data "aws_ami" "example" {
    most_recent = true
    owners      = ["amazon"]
  
    filter {
      name   = "name"
      values = ["amzn2-ami-kernel-*-hvm-*-x86_64-gp2"]
    }
  
    filter {
      name   = "root-device-type"
      values = ["ebs"]
    }
  
    filter {
      name   = "virtualization-type"
      values = ["hvm"]
    }
  }
  
  data "aws_availability_zones" "azs" {}

  # VPC
module "vpc" {
  source = "terraform-aws-modules/vpc/aws"

  name = "jenkins-vpc"
  cidr = var.vpc_cidr

  azs                     = data.aws_availability_zones.azs.names
  public_subnets          = var.public_subnets
  map_public_ip_on_launch = true

  enable_dns_hostnames = true

  tags = {
    Name        = "jenkins-vpc"
    Terraform   = "true"
    Environment = "dev"
  }

  public_subnet_tags = {
    Name = "jenkins-subnet"
  }
}

# SG
module "sg" {
  source = "terraform-aws-modules/security-group/aws"

  name        = "jenkins-sg"
  description = "Security Group for Jenkins Server"
  vpc_id      = module.vpc.vpc_id

  ingress_with_cidr_blocks = [
    {
      from_port   = 8080
      to_port     = 8080
      protocol    = "tcp"
      description = "HTTP"
      cidr_blocks = "0.0.0.0/0"
    },
    {
      from_port   = 22
      to_port     = 22
      protocol    = "tcp"
      description = "SSH"
      cidr_blocks = "0.0.0.0/0"
    }
  ]

  egress_with_cidr_blocks = [
    {
      from_port   = 0
      to_port     = 0
      protocol    = "-1"
      cidr_blocks = "0.0.0.0/0"
    }
  ]

  tags = {
    Name = "jenkins-sg"
  }
}

# EC2
module "ec2_instance" {
  source = "terraform-aws-modules/ec2-instance/aws"

  name = "Jenkins-Server"
  
  ami = "ami-01ed8ade75d4eee2f"
  instance_type               = var.instance_type
  key_name                    = "Key_1"
  monitoring                  = true
  vpc_security_group_ids      = [module.sg.security_group_id]
  subnet_id                   = module.vpc.public_subnets[0]
  associate_public_ip_address = true
  user_data                   = file("jenkins-install.sh")
  availability_zone           = data.aws_availability_zones.azs.names[0]

  tags = {
    Name        = "Jenkins-Server"
    Terraform   = "true"
    Environment = "dev"
  }
}
provider "aws" {
    region = "ap-northeast-2"
  }

vpc_cidr       = "10.0.0.0/16"
public_subnets = ["10.0.1.0/24"]
instance_type  = "t3.small"

variable "vpc_cidr" {
    description = "VPC CIDR"
    type        = string
  }
  
  variable "public_subnets" {
    description = "Subnets CIDR"
    type        = list(string)
  }
  
  variable "instance_type" {
    description = "Instance Type"
    type        = string
  }